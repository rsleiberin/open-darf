TLC2 Version 2.19 of 08 August 2024 (rev: 5a47802)
Warning: Please run the Java VM which executes TLC with a throughput optimized garbage collector by passing the "-XX:+UseParallelGC" property.
(Use the -nowarning option to disable this warning.)
Running breadth-first search Model-Checking with fp 96 and seed -8491521227629736808 with 12 workers on 16 cores with 3990MB heap and 64MB offheap memory [pid: 3878] (Linux 5.15.167.4-microsoft-standard-WSL2 amd64, Ubuntu 17.0.15 x86_64, MSBDiskFPSet, DiskStateQueue).
Parsing file /home/tank/darf-source/open-darf/verification/tla/classA_specs/CA_ProvenanceChainValidity.tla
Parsing file /tmp/Integers.tla
Parsing file /tmp/FiniteSets.tla
Parsing file /tmp/TLC.tla
Parsing file /tmp/Naturals.tla
Parsing file /tmp/Sequences.tla
Semantic processing of module Naturals
Semantic processing of module Integers
Semantic processing of module Sequences
Semantic processing of module FiniteSets
Semantic processing of module TLC
Semantic processing of module CA_ProvenanceChainValidity
Starting... (2025-09-28 19:18:59)
Computing initial states...
Finished computing initial states: 1 distinct state generated at 2025-09-28 19:18:59.
Error: Deadlock reached.
Error: The behavior up to this point is:
State 1: <Initial predicate>
Prov = <<{}, {}, {}, {}>>

State 2: <Next line 26, col 7 to line 28, col 60 of module CA_ProvenanceChainValidity>
Prov = <<{2}, {}, {}, {}>>

State 3: <Next line 26, col 7 to line 28, col 60 of module CA_ProvenanceChainValidity>
Prov = <<{2, 3}, {}, {}, {}>>

State 4: <Next line 26, col 7 to line 28, col 60 of module CA_ProvenanceChainValidity>
Prov = <<{2, 3, 4}, {}, {}, {}>>

State 5: <Next line 26, col 7 to line 28, col 60 of module CA_ProvenanceChainValidity>
Prov = <<{2, 3, 4}, {1}, {}, {}>>

State 6: <Next line 26, col 7 to line 28, col 60 of module CA_ProvenanceChainValidity>
Prov = <<{2, 3, 4}, {1, 3}, {}, {}>>

State 7: <Next line 26, col 7 to line 28, col 60 of module CA_ProvenanceChainValidity>
Prov = <<{2, 3, 4}, {1, 3, 4}, {}, {}>>

State 8: <Next line 26, col 7 to line 28, col 60 of module CA_ProvenanceChainValidity>
Prov = <<{2, 3, 4}, {1, 3, 4}, {1}, {}>>

State 9: <Next line 26, col 7 to line 28, col 60 of module CA_ProvenanceChainValidity>
Prov = <<{2, 3, 4}, {1, 3, 4}, {1, 4}, {}>>

State 10: <Next line 26, col 7 to line 28, col 60 of module CA_ProvenanceChainValidity>
Prov = <<{2, 3, 4}, {1, 3, 4}, {1, 4}, {1}>>

State 11: <Next line 26, col 7 to line 28, col 60 of module CA_ProvenanceChainValidity>
Prov = <<{2, 3, 4}, {1, 3, 4}, {1, 4}, {1, 2}>>

State 12: <Next line 26, col 7 to line 28, col 60 of module CA_ProvenanceChainValidity>
Prov = <<{2, 3, 4}, {1, 3, 4}, {1, 4}, {1, 2, 3}>>

State 13: <Next line 26, col 7 to line 28, col 60 of module CA_ProvenanceChainValidity>
Prov = <<{2, 3, 4}, {1, 3, 4}, {1, 2, 4}, {1, 2, 3}>>

24577 states generated, 4096 distinct states found, 0 states left on queue.
The depth of the complete state graph search is 13.
The average outdegree of the complete state graph is 1 (minimum is 0, the maximum 12 and the 95th percentile is 4).
Finished in 00s at (2025-09-28 19:18:59)
