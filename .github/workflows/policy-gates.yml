name: policy-gates
on:
  pull_request:
    types: [opened, synchronize, edited, labeled, unlabeled, reopened, ready_for_review]
jobs:
  policy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - name: Label family + status-only guards
        shell: bash
        run: |
          set -euo pipefail
          EVENT="$GITHUB_EVENT_PATH"
          labels=$(jq -r '.pull_request.labels[].name' "$EVENT" || true)
          echo "Labels: $labels"

          type=0; status=0; priority=0; area=0
          for L in $labels; do
            case "$L" in
              type:*) type=$((type+1));;
              status:*) status=$((status+1));;
              priority:*) priority=$((priority+1));;
              area:*) area=$((area+1));;
            esac
            case "$L" in
              deferred|"status:review"|"blocked: adr-pipeline")
                echo "::error ::Forbidden label: $L"; exit 1;;
            esac
          done

          if [ $type -ne 1 ] || [ $status -ne 1 ] || [ $priority -ne 1 ]; then
            echo "::error ::Each family must have exactly one: type:*, status:*, priority:*"; exit 1
          fi
          if [ $area -lt 1 ]; then
            echo "::error ::Need at least one area:* label"; exit 1
          fi

          title=$(jq -r '.pull_request.title' "$EVENT")
          if echo "$title" | grep -qi 'status-only'; then
            echo "Status-only PR detected â€” checking for .tla/.cfg diffs"
            base_ref='${{ github.base_ref }}'
            [ -z "$base_ref" ] && base_ref=$(jq -r '.pull_request.base.ref' "$EVENT")
            git fetch origin "$base_ref:$base_ref" || true
            changed=$(git diff --name-only "origin/$base_ref"...HEAD | grep -E '\.(tla|cfg)$' || true)
            if [ -n "$changed" ]; then
              printf "::error ::Spec files changed in status-only PR:\n%s\n" "$changed"; exit 1
            fi
          fi
