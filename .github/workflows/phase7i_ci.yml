name: Phase 7I CI

on:
  push:
    branches:
      - feat/phase7i-benchmark-optimization
  pull_request:
    branches:
      - main

jobs:
  validate-and-aggregate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install jsonschema jq.py

      - name: Validate metrics against schema
        run: |
          python - << 'PY'
import json, glob, sys, pathlib
from jsonschema import validate
root = pathlib.Path('.')
schema = json.loads((root/'docs'/'schemas'/'metrics_v1.json').read_text())
metrics = glob.glob('var/receipts/phase7i/*/*/metrics.json')
valid=0; total=0; errors=[]
for mf in metrics:
    total+=1
    try:
        data=json.loads(pathlib.Path(mf).read_text())
        validate(instance=data, schema=schema)
        valid+=1
    except Exception as e:
        errors.append(f"{mf}: {e}")
print(f"Valid metrics: {valid}/{total}")
if errors:
    print("\n".join(errors))
PY

      - name: Aggregate scoreboard
        run: |
          scripts/phase7i/aggregate_scoreboard.py > /dev/null || true
          echo "Aggregated scoreboard summaries under docs/scoreboards/phase7i/"

      - name: Acceptance snapshot
        id: accept
        run: |
          OUT=$(scripts/phase7i/acceptance_check.py)
          echo "$OUT" > acceptance.json
          echo "json<<EOF" >> $GITHUB_OUTPUT
          cat acceptance.json >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: phase7i-artifacts
          path: |
            docs/scoreboards/phase7i/**/*.md
            docs/phase7i/ACCEPTANCE_REPORT.md
            acceptance.json

      - name: PR summary (if PR)
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const summary = JSON.parse(process.env.ACCEPT_JSON);
            const body = [
              'Phase 7I Acceptance Snapshot',
              '',
              `Runs evaluated: ${summary.runs_evaluated}`,
              `Best SciERC test F1_micro: ${summary.best_scierc_test_f1_micro}`,
              `Meets F1 target (>= 0.50): ${summary.meets_f1_target}`,
              `Meets compliance invariant (>= 0.95): ${summary.meets_compliance_invariant}`,
              `Overall: ${summary.overall_status}`
            ].join('\n');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });
        env:
          ACCEPT_JSON: ${{ steps.accept.outputs.json }}
